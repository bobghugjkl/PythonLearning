#!/user/bin/env python #找路径下面的python编辑环境
# -*- coding: UTF-8 -*- #python中文编码
# !/usr/bin/python3
import time

print("hellow world!")
print("你好，世界")
print('hellow world');
print('runoob');
if True:
    print("Answer")  # 这里的内容是注释
    print("True")
else:
    print("Answer")
item_one = 1
item_two = 2
item_three = 3
total = item_one + \
        item_two + \
        item_three
days = ['Monday', 'Tuesday', 'Wednesday',
        'Thursday', 'Friday']

"""
这里是多行注释
"""

"""print(wall)
num = input()
print(num)"""
"""counter = 100
miles = 1000.0
name = "john"
print(counter)
del counter
print(counter)"""


def reverseWords(input):
    # 通过空格将字符串分隔符，把各个单词分割为列表
    inputWords = input.split(" ")
    inputWords = inputWords[-1::-1]
    output = ' '.join(inputWords)

    return output


if __name__ == "__main__":
    input = 'I like runoob'
    rw = reverseWords(input)
    print(rw)
import sys;

x = 'runoob';
sys.stdout.write(x + '\n')
print(12, end=" ")
print(13)
print(14)
a, b, c, d = 20, 5.5, True, 4 + 3j
print(type(a), type(b), type(c), type(d))
a = 111
isinstance(a, int)


class A:
    pass


class B:
    pass


isinstance(A(), A)
type(A()) == A
isinstance(B(), A)
type(B()) == A
issubclass(bool, int)
True == 1
False == 0
True + 1
False + 1
1 is True
0 is False
sites = {'Google', 'Taobao', 'Runoob', 'Facebook', 'Zhihu', 'Baidu'}
print(sites)

if 'Runoob' in sites:
    print('Runoob 在集合中')
else:
    print('Runoob 不在集合中')
# set可以进行集合运算
a = set('abracadabra')
b = set('alacazam')

print(a)
print(a - b)  # 差集
print(a | b)  # 并集
print(a & b)  # 交集
print(a ^ b)  # 两集合中不同时存在的元素
dict = {}
dict['one'] = "1 - 菜鸟教程"
dict[2] = "2 - 菜鸟工具"
tinydict = {'name': 'runoob', 'code': 1, 'site': 'www.runoob.com'}
print(dict['one'])  # 输出键为'one'的值
print(dict[2])  # 输出键为2的值
print(tinydict)  # 输出完整的字典
print(tinydict.keys())  # 输出所有键
print(tinydict.values())  # 输出所有的值
dict
var = {'Runoob': 1, 'Google': 2, 'Taobao': 3}
x = b"hello"
y = x[1:3]
z = x + b"world"
print(z)


def a():
    a = 1
    """这是文档字符串"""
    pass


print(a.__doc__)
print("line1 \
... line2 \
... line3")
print("\\")
for i in range(101):
    print("\r{:3}%".format(i), end=' ')
    time.sleep(0.05)
para_str = """这是一个多行字符串的示例
多行字符串可以使用制表符
TAB ( \t ).
也可以使用换行符[ \n ]
"""
print(para_str)
list_2d = [[0 for i in range(5)] for i in range(5)]
list_2d[0].append(3)
list_2d[0].append(5)
list_2d[2].append(7)
print(list_2d)
a = {x for x in 'abracadabra' if x not in 'abc'}
print(a)
thisset = set(("Google", "Runoob", "Taobao"))
# add只能添加元素，但update可以添加很多东西，元素列表元组
thisset.add(20)
thisset.update({1, 3})
print(thisset)
# 两种删除，前者不存在会报错，后者则不会
thisset.remove("Taobao")
thisset.discard("Google")
# 设置随机删除某个元素
x = thisset.pop()
print(x)
# len(s)函数计算s的元素个数
# 清空集合
thisset.clear()
# 判断元素在集合中是否存在：x in s
thissetion = set(("Google", "Runoob", "Taobao"))
"Runoob" in thissetion
# 拷贝一个集合
thisseted = thissetion.copy()
print(thisseted)
# 返回交集：intersection返回集合的交集，但intersection_update()则只是在原有集合上删除相等的部分
# python中将else if改成了elif


# while else 语句
count = 0;
while count < 5:
    print(count, "小于 5")
    count += 1
else:
    print(count, "大于或等于 5")
names = ['Bob', 'Tom', 'alice', 'jerry', 'Wendy', 'Smith']
new_names = [name.upper() for name in names if len(name) > 3]
print(new_names)
multiples = [i for i in range(30) if i % 3 == 0]
print(multiples)
listdemo = ['Google', 'Runoob', 'Taobao']
newdict = {key: len(key) for key in listdemo}
print(newdict)
dic = {x: x ** 2 for x in (2, 4, 6)}
print(dic)
type(dic)
setnew2 = {i ** 2 for i in (1, 2, 3)}
print(setnew2)
a = {x for x in 'abracadabra' if x not in 'abc'}
print(a)
print(type(a))
d = (x for x in range(1, 10))
print(a)
print(tuple(a))
list2 = [1, 2, 3, 4]
it = iter(list)
print(next(it))
print(next(it))
